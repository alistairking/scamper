name: Build

on:
  push: # binaries+docker for all branches
    branches: "**"
    tags: "20[0-9]+*" # draft a release

jobs:
  build-multiarch:
    name: Build (multiarch)
    runs-on: ubuntu-latest
    steps:
      # SETUP
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Earthly
        uses: earthly/actions/setup-earthly@v1
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Build binaries
        run: |
          earthly +build-multiarch

      # STORE BINARIES
      - name: Archive compiled binaries
        uses: actions/upload-artifact@v4
        with:
          name: scamper-build-multiarch
          path: build/**/scamper

      # DOCKER IMAGES
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Push docker image (branch-only)
        run: |
          earthly --push +docker-multiarch

      # PACKAGES
      # TODO: fix version for branch builds
      # TODO: include man pages in docs
      - name: Build OS packages (deb/rpm)
        run: |
          earthly +pkg-multiarch
      - name: Archive packages
        uses: actions/upload-artifact@v4
        with:
          name: scamper-packages
          path: pkg/*

  build-macos:
    name: Build (macos)
    strategy:
      matrix:
        include:
          - runner: macos-latest
            platform: darwin-arm64
          - runner: macos-13
            platform: darwin-amd64
    runs-on: ${{ matrix.runner }}
    steps:
      # SETUP
      - name: Checkout code
        uses: actions/checkout@v2

      # NATIVE-COMPILATION (wish we could use earthly here)
      - name: macOS dependencies
        run: |
          brew install autoconf automake libtool gsed
      - name: Build macOS binary
        # TODO: figure out how to get earthly working in macos
        run: |
          export PATH="$(brew --prefix)/opt/gnu-sed/libexec/gnubin:$PATH"
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          version="$(grep SCAMPER_VERSION scamper/scamper.h | cut -d \" -f 2)-${GITHUB_REF_NAME}.${git_hash}"
          ./set-version.sh ${version}
          autoreconf -vfi
          ./configure --disable-libs --disable-utils
          make
          mkdir -p ./build/${{matrix.platform}}
          cp scamper/scamper ./build/${{matrix.platform}}
          echo "Successfully built scamper version: $(./scamper/scamper -v)"

      # STORE BINARIES
      - name: Archive compiled binaries
        uses: actions/upload-artifact@v4
        with:
          name: scamper-build-${{ matrix.platform }}
          path: build/**/scamper

  docs:
    name: Generate docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Earthly
        uses: earthly/actions/setup-earthly@v1
      - name: Build Scamper docs
        run: earthly +docs
      - name: Archive rendered docs
        uses: actions/upload-artifact@v4
        with:
          name: scamper-docs
          path: docs/*.pdf

  # RELEASE-SPECIFIC (on tag)
  release-artifacts:
    name: Organize release artifacts
    runs-on: ubuntu-latest
    needs:
      - build-multiarch
      - build-macos
      - docs
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Organize things
        run: |
          mkdir -p build/
          mv ./scamper-build-*/* ./build/
          rmdir ./scamper-build-*
          for file in $(find ./build -type f -name scamper); do
            platform=${file/.\/build\//};
            platform=${platform/\/scamper/};
            platform=${platform//\//-};
            cp "${file}" "scamper-${platform}"
          done
          rm -r build/
          tar zcf scamper-docs.tar.gz scamper-docs/
          rm -r scamper-docs/
          cp scamper-packages/*.{deb,rpm} .
          rm -r scamper-packages
          echo "=== FINAL ASSETS ==="
          find ./
      - name: Archive release artifact
        uses: actions/upload-artifact@v4
        with:
          name: scamper-release-artifacts
          path: ./*

  release:
    name: Create draft Release
    runs-on: ubuntu-latest
    needs: release-artifacts
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: scamper-release-artifacts
      - name: "Create release"
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: ${{ contains(github.ref, '-rc') }}
          body: ${{ github.event.head_commit.message }}
          files: |
            scamper*
          fail_on_unmatched_files: true
